#define PIN_LED      7
#define ACTIVE_HIGH  1   

volatile unsigned int g_period_us = 1000;  
volatile unsigned int g_duty_pct  = 0;     

inline void ledOn()  { digitalWrite(PIN_LED, ACTIVE_HIGH ? HIGH : LOW); }
inline void ledOff() { digitalWrite(PIN_LED, ACTIVE_HIGH ? LOW  : HIGH); }

void set_period(int period_us){
  if (period_us < 100)   period_us = 100;
  if (period_us > 10000) period_us = 10000;
  g_period_us = period_us;
}
void set_duty(int duty_pct){
  if (duty_pct < 0)   duty_pct = 0;
  if (duty_pct > 100) duty_pct = 100;
  g_duty_pct = duty_pct;
}

void pwm_run_for_us(unsigned long duration_us){
  unsigned long t_end = micros() + duration_us;
  unsigned int on_us  = (unsigned long)g_period_us * g_duty_pct / 100UL;
  unsigned int off_us = g_period_us - on_us;

  while ((long)(micros() - t_end) < 0){
    if (on_us  > 0){ ledOn();  delayMicroseconds(on_us); }
    if (off_us > 0){ ledOff(); delayMicroseconds(off_us); }
  }
}

void triangle_one_second(){
  const unsigned long TOTAL_US = 1000000UL; 
  const int UP=101, DN=100, STEPS=UP+DN;
  const unsigned long STEP_US = TOTAL_US / STEPS;

  for (int d=0; d<=100; d++){ set_duty(d); pwm_run_for_us(STEP_US); }
  for (int d=99; d>=0;  d--){ set_duty(d); pwm_run_for_us(STEP_US); }
}

void triangle_three_times(int period_us){
  set_period(period_us);
  for (int i=0; i<3; i++){
    triangle_one_second();
  }
}

void setup(){
  pinMode(PIN_LED, OUTPUT);
  ledOff();
  Serial.begin(115200);
}

void loop(){
  Serial.println("10ms 주기 시작");
  triangle_three_times(10000); 
  
  Serial.println("1ms 주기 시작");
  triangle_three_times(1000);  
  
  Serial.println("0.1ms 주기 시작");
  triangle_three_times(100);   
  delay(1000); 
}

